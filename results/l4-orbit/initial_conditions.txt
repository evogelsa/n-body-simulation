
const double time_step = 6;
const int max_time = 28*24*60*60;
const unsigned long long max_steps = max_time / time_step;
const int points_per_body = 1000;
const int log_resolution = max_steps / points_per_body;

std::vector<Body> bodies;

// earth
const double r_e = 0;
const double v_e = 0;
const double m_e = 5.97e24;
bodies.push_back(Body(
      Vector3D(r_e, 0, 0),
      Vector3D(0, v_e, 0),
      m_e
));

// moon
const double r_m = 3.844e8;
const double v_m = 1020;
const double m_m = 7.3459e22;
bodies.push_back(Body(
      Vector3D(r_m, 0, 0),
      Vector3D(0, v_m, 0),
      m_m
));

// L4 lagrange point
const double l4_x = r_m / 2.0;
const double l4_y = r_m * std::sqrt(3) / 2;

// satellite
const double m_s = 1e3;
const double v_x = -v_m * std::cos(M_PI / 6);
const double v_y = v_m * std::sin(M_PI / 6);
bodies.push_back(Body(
    Vector3D(l4_x, l4_y, 0),
    Vector3D(v_x, v_y, 0),
    m_s
));

